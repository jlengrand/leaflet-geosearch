{"code":"import AbstractProvider, { RequestType, } from './provider';\r\nexport default class GeoApiFrProvider extends AbstractProvider {\r\n    constructor(options = {}) {\r\n        super(options);\r\n        const host = 'https://api-adresse.data.gouv.fr';\r\n        this.searchUrl = options.searchUrl || `${host}/search`;\r\n        this.reverseUrl = options.reverseUrl || `${host}/reverse`;\r\n    }\r\n    endpoint({ query, type }) {\r\n        const params = typeof query === 'string' ? { q: query } : query;\r\n        switch (type) {\r\n            case RequestType.REVERSE:\r\n                return this.getUrl(this.reverseUrl, params);\r\n            default:\r\n                return this.getUrl(this.searchUrl, params);\r\n        }\r\n    }\r\n    parse(result) {\r\n        return result.data.features.map((r) => ({\r\n            x: r.geometry.coordinates[0],\r\n            y: r.geometry.coordinates[1],\r\n            label: r.properties.label,\r\n            bounds: null,\r\n            raw: r,\r\n        }));\r\n    }\r\n}\r\n//# sourceMappingURL=geoApiFrProvider.js.map","references":["/Users/julienlengrand-lambert/Developer/leaflet-geosearch/src/providers/provider.ts"],"map":"{\"version\":3,\"file\":\"geoApiFrProvider.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/providers/geoApiFrProvider.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,gBAAgB,EAAE,EAKvB,WAAW,GACZ,MAAM,YAAY,CAAC;AAyCpB,MAAM,CAAC,OAAO,OAAO,gBAAiB,SAAQ,gBAG7C;IAIC,YAAY,UAAmC,EAAE;QAC/C,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,MAAM,IAAI,GAAG,kCAAkC,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,GAAG,IAAI,SAAS,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,GAAG,IAAI,UAAU,CAAC;IAC5D,CAAC;IAED,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAoB;QACxC,MAAM,MAAM,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;QAEhE,QAAQ,IAAI,EAAE;YACZ,KAAK,WAAW,CAAC,OAAO;gBACtB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAE9C;gBACE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;SAC9C;IACH,CAAC;IAED,KAAK,CAAC,MAAoC;QACxC,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACtC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;YAC5B,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;YAC5B,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK;YACzB,MAAM,EAAE,IAAI;YACZ,GAAG,EAAE,CAAC;SACP,CAAC,CAAC,CAAC;IACN,CAAC;CACF\"}","dts":{"name":"/Users/julienlengrand-lambert/Developer/leaflet-geosearch/providers/geoApiFrProvider.d.ts","writeByteOrderMark":false,"text":"import AbstractProvider, { EndpointArgument, ParseArgument, ProviderOptions, SearchResult } from './provider';\r\nexport interface RequestResult {\r\n    features: RawResult[];\r\n    type: string;\r\n    version: string;\r\n    attribution: string;\r\n    licence: string;\r\n    query: string;\r\n    limit: string;\r\n}\r\nexport interface RawResult {\r\n    properties: {\r\n        label: string;\r\n        score: number;\r\n        importance: number;\r\n        x: number;\r\n        y: number;\r\n        housenumber: string;\r\n        id: string;\r\n        type: string;\r\n        name: string;\r\n        postcode: string;\r\n        citycode: string;\r\n        city: string;\r\n        context: string;\r\n        street: string;\r\n    };\r\n    type: string;\r\n    geometry: {\r\n        coordinates: number[];\r\n        type: string;\r\n    };\r\n}\r\nexport declare type GeoApiFrProviderOptions = {\r\n    searchUrl?: string;\r\n    reverseUrl?: string;\r\n} & ProviderOptions;\r\nexport default class GeoApiFrProvider extends AbstractProvider<RequestResult, RawResult> {\r\n    searchUrl: string;\r\n    reverseUrl: string;\r\n    constructor(options?: GeoApiFrProviderOptions);\r\n    endpoint({ query, type }: EndpointArgument): string;\r\n    parse(result: ParseArgument<RequestResult>): SearchResult<RawResult>[];\r\n}\r\n"}}
