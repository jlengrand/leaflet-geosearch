{"code":"import AbstractProvider from './provider';\r\nexport default class MapBoxProvider extends AbstractProvider {\r\n    constructor(options = {}) {\r\n        super(options);\r\n        const host = 'https://a.tiles.mapbox.com';\r\n        this.searchUrl = options.searchUrl || `${host}/v4/geocode/mapbox.places/`;\r\n    }\r\n    endpoint({ query }) {\r\n        return this.getUrl(`${this.searchUrl}${query}.json`);\r\n    }\r\n    parse(response) {\r\n        const records = Array.isArray(response.data.features)\r\n            ? response.data.features\r\n            : [];\r\n        return records.map((r) => {\r\n            let bounds = null;\r\n            if (r.bbox) {\r\n                bounds = [\r\n                    [parseFloat(r.bbox[1]), parseFloat(r.bbox[0])],\r\n                    [parseFloat(r.bbox[3]), parseFloat(r.bbox[2])],\r\n                ];\r\n            }\r\n            return {\r\n                x: Number(r.center[0]),\r\n                y: Number(r.center[1]),\r\n                label: r.place_name ? r.place_name : r.text,\r\n                bounds,\r\n                raw: r,\r\n            };\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=mapBoxProvider.js.map","references":["/Users/julienlengrand-lambert/Developer/leaflet-geosearch/src/providers/provider.ts"],"map":"{\"version\":3,\"file\":\"mapBoxProvider.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/providers/mapBoxProvider.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,gBAMN,MAAM,YAAY,CAAC;AAiBpB,MAAM,CAAC,OAAO,OAAO,cAAe,SAAQ,gBAG3C;IAGC,YAAY,UAAiC,EAAE;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,MAAM,IAAI,GAAG,4BAA4B,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,GAAG,IAAI,4BAA4B,CAAC;IAC5E,CAAC;IAED,QAAQ,CAAC,EAAE,KAAK,EAAoB;QAClC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,QAAsC;QAC1C,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;YACnD,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ;YACxB,CAAC,CAAC,EAAE,CAAC;QAEP,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;YACvB,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,CAAC,IAAI,EAAE;gBACV,MAAM,GAAG;oBACP,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9C,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChC,CAAC;aAClB;YAED,OAAO;gBACL,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACtB,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC3C,MAAM;gBACN,GAAG,EAAE,CAAC;aACP,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;CACF\"}","dts":{"name":"/Users/julienlengrand-lambert/Developer/leaflet-geosearch/providers/mapBoxProvider.d.ts","writeByteOrderMark":false,"text":"import AbstractProvider, { EndpointArgument, ParseArgument, ProviderOptions, SearchResult } from './provider';\r\nexport declare type RequestResult = {\r\n    features: RawResult[];\r\n};\r\nexport interface RawResult {\r\n    center: [string, string];\r\n    text: string;\r\n    place_name: string;\r\n    bbox: [string, string, string, string];\r\n}\r\nexport declare type MapBoxProviderOptions = {\r\n    searchUrl?: string;\r\n    reverseUrl?: string;\r\n} & ProviderOptions;\r\nexport default class MapBoxProvider extends AbstractProvider<RequestResult, RawResult> {\r\n    searchUrl: string;\r\n    constructor(options?: MapBoxProviderOptions);\r\n    endpoint({ query }: EndpointArgument): string;\r\n    parse(response: ParseArgument<RequestResult>): SearchResult<RawResult>[];\r\n}\r\n"}}
