{"code":"export function createElement(element, className = '', parent, attributes = {}) {\r\n    const el = document.createElement(element);\r\n    if (className) {\r\n        el.className = className;\r\n    }\r\n    Object.keys(attributes).forEach((key) => {\r\n        if (typeof attributes[key] === 'function') {\r\n            // IE doesn't support startsWith\r\n            const type = (key.indexOf('on') === 0\r\n                ? key.substr(2).toLowerCase()\r\n                : key);\r\n            el.addEventListener(type, attributes[key]);\r\n        }\r\n        else if (key === 'html') {\r\n            el.innerHTML = attributes[key];\r\n        }\r\n        else if (key === 'text') {\r\n            el.innerText = attributes[key];\r\n        }\r\n        else {\r\n            el.setAttribute(key, attributes[key]);\r\n        }\r\n    });\r\n    if (parent) {\r\n        parent.appendChild(el);\r\n    }\r\n    return el;\r\n}\r\nexport function stopPropagation(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n}\r\nexport function createScriptElement(url, cb) {\r\n    const script = createElement('script', null, document.body);\r\n    script.setAttribute('type', 'text/javascript');\r\n    return new Promise((resolve) => {\r\n        window[cb] = (json) => {\r\n            script.remove();\r\n            delete window[cb];\r\n            resolve(json);\r\n        };\r\n        script.setAttribute('src', url);\r\n    });\r\n}\r\nexport const cx = (...classNames) => classNames.filter(Boolean).join(' ').trim();\r\nexport function addClassName(element, className) {\r\n    if (!element || !element.classList) {\r\n        return;\r\n    }\r\n    // IE doesn't support adding multiple classes at once :(\r\n    const classNames = Array.isArray(className) ? className : [className];\r\n    classNames.forEach((name) => {\r\n        if (!element.classList.contains(name)) {\r\n            element.classList.add(name);\r\n        }\r\n    });\r\n}\r\nexport function removeClassName(element, className) {\r\n    if (!element || !element.classList) {\r\n        return;\r\n    }\r\n    // IE doesn't support removing multiple classes at once :(\r\n    const classNames = Array.isArray(className) ? className : [className];\r\n    classNames.forEach((name) => {\r\n        if (element.classList.contains(name)) {\r\n            element.classList.remove(name);\r\n        }\r\n    });\r\n}\r\nexport function replaceClassName(element, find, replace) {\r\n    removeClassName(element, find);\r\n    addClassName(element, replace);\r\n}\r\n//# sourceMappingURL=domUtils.js.map","references":[],"map":"{\"version\":3,\"file\":\"domUtils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/domUtils.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/julienlengrand-lambert/Developer/leaflet-geosearch/domUtils.d.ts","writeByteOrderMark":false,"text":"export declare function createElement<T extends HTMLElement = HTMLElement>(element: string, className?: string | null, parent?: Element | null, attributes?: {\r\n    [key: string]: string | ((event: any) => void);\r\n}): T;\r\nexport declare function stopPropagation(event: Event): void;\r\nexport declare function createScriptElement<T = object>(url: string, cb: string): Promise<T>;\r\nexport declare const cx: (...classNames: (string | undefined)[]) => string;\r\nexport declare function addClassName(element: Element | null, className: string | string[]): void;\r\nexport declare function removeClassName(element: Element | null, className: string | string[]): void;\r\nexport declare function replaceClassName(element: Element, find: string, replace: string): void;\r\n"}}
