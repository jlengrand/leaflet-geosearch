{"code":"export var RequestType;\r\n(function (RequestType) {\r\n    RequestType[RequestType[\"SEARCH\"] = 0] = \"SEARCH\";\r\n    RequestType[RequestType[\"REVERSE\"] = 1] = \"REVERSE\";\r\n})(RequestType || (RequestType = {}));\r\nexport default class AbstractProvider {\r\n    constructor(options = {}) {\r\n        this.options = options;\r\n    }\r\n    getParamString(params = {}) {\r\n        const set = { ...this.options.params, ...params };\r\n        return Object.keys(set)\r\n            .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(set[key])}`)\r\n            .join('&');\r\n    }\r\n    getUrl(url, params) {\r\n        return `${url}?${this.getParamString(params)}`;\r\n    }\r\n    async search(options) {\r\n        const url = this.endpoint({\r\n            query: options.query,\r\n            type: RequestType.SEARCH,\r\n        });\r\n        const request = await fetch(url);\r\n        const json = await request.json();\r\n        return this.parse({ data: json });\r\n    }\r\n}\r\n//# sourceMappingURL=provider.js.map","references":[],"map":"{\"version\":3,\"file\":\"provider.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/providers/provider.ts\"],\"names\":[],\"mappings\":\"AAwBA,MAAM,CAAN,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,iDAAM,CAAA;IACN,mDAAO,CAAA;AACT,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;AAwBD,MAAM,CAAC,OAAO,OAAgB,gBAAgB;IAM5C,YAAY,UAA2B,EAAE;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAOD,cAAc,CAAC,SAAyB,EAAE;QACxC,MAAM,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,MAAM,EAAE,CAAC;QAClD,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;aACpB,GAAG,CACF,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,IAAI,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CACtE;aACA,IAAI,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IAED,MAAM,CAAC,GAAW,EAAE,MAAuB;QACzC,OAAO,GAAG,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC;IACjD,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,OAAuB;QAClC,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;YACxB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,IAAI,EAAE,WAAW,CAAC,MAAM;SACzB,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,IAAI,GAAmB,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IACpC,CAAC;CACF\"}","dts":{"name":"/Users/julienlengrand-lambert/Developer/leaflet-geosearch/providers/provider.d.ts","writeByteOrderMark":false,"text":"export declare type PointTuple = [number, number];\r\nexport declare type BoundsTuple = [PointTuple, PointTuple];\r\nexport interface LatLng {\r\n    lat: number;\r\n    lng: number;\r\n}\r\nexport interface SearchResult<TRawResult = any> {\r\n    x: number;\r\n    y: number;\r\n    label: string;\r\n    bounds: BoundsTuple | null;\r\n    raw: TRawResult;\r\n}\r\nexport interface ProviderParams {\r\n    [key: string]: string | number | boolean;\r\n}\r\nexport interface ProviderOptions {\r\n    params?: ProviderParams;\r\n}\r\nexport declare enum RequestType {\r\n    SEARCH = 0,\r\n    REVERSE = 1\r\n}\r\nexport interface EndpointArgument {\r\n    query: string | {\r\n        [key: string]: string | number | boolean;\r\n    };\r\n    type?: RequestType;\r\n}\r\nexport interface SearchArgument {\r\n    query: string;\r\n}\r\nexport interface ParseArgument<TData> {\r\n    data: TData;\r\n}\r\nexport interface Provider<TRequestResult, TRawResult> {\r\n    options: ProviderOptions;\r\n    endpoint(options: EndpointArgument): string;\r\n    getParamString(params: ProviderParams): string;\r\n    parse(response: ParseArgument<TRequestResult>): SearchResult<TRawResult>[];\r\n    search(options: SearchArgument): Promise<SearchResult<TRawResult>[]>;\r\n}\r\nexport default abstract class AbstractProvider<TRequestResult = any, TRawResult = any> implements Provider<TRequestResult, TRawResult> {\r\n    options: ProviderOptions;\r\n    constructor(options?: ProviderOptions);\r\n    abstract endpoint(options: EndpointArgument): string;\r\n    abstract parse(response: ParseArgument<TRequestResult>): SearchResult<TRawResult>[];\r\n    getParamString(params?: ProviderParams): string;\r\n    getUrl(url: string, params?: ProviderParams): string;\r\n    search(options: SearchArgument): Promise<SearchResult<TRawResult>[]>;\r\n}\r\n"}}
